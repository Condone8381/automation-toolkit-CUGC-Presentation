- hosts: secondary
  remote_user: nsroot
  connection: citrix.adc.ssh_citrix_adc
  gather_facts: false
  collections:
    - citrix.adc
  vars:
    ansible_python_interpreter: /var/python/bin/python

    build_location: "/var/nsinstall/new_build/"
    build_file_name: "build-13.1-34.11_nc_64.tgz"
    migration_poll_timeout: 120

    nscli_command: "force ha failover -force"
    migration_poll_delay: "{{ (migration_poll_timeout/5)|int }}"

  tasks:
    - name: Untar the build file in Secondary node
      shell: "tar xvf {{ build_location }}{{ build_file_name }} -C {{ build_location }}"
      register: tar_output

    # - name: Untar result
    #   debug:
    #     msg: "{{ tar_output }}"

    - name: Upgrade build in Secondary node
      shell: "./installns -Y"
      args:
        chdir: "{{ build_location }}"
      register: nscli_output
      async: 120
      poll: 0

    - name: Wait for the Secondary to Come-up
      wait_for_connection:
        connect_timeout: 10
        sleep: 10
        delay: 120
        timeout: 900

    - name: nsmigration resource
      delegate_to: localhost
      register: result
      vars:
        ansible_python_interpreter: /usr/bin/python
      citrix_adc_nitro_request:
        nsip: "{{ nsip }}"
        nitro_user: "{{ nitro_user }}"
        nitro_pass: "{{ nitro_pass }}"
        validate_certs: no

        operation: action
        action: start

        resource: nsmigration
        attributes: {}

    - name: Poll till the migration completes
      delegate_to: localhost
      vars:
        ansible_python_interpreter: /usr/bin/python
      citrix_adc_nitro_info:
        nsip: "{{ nsip }}"
        nitro_user: "{{ nitro_user }}"
        nitro_pass: "{{ nitro_pass }}"
        validate_certs: no

        endpoint: nsmigration
        nitro_info_key: nsmigration

      until: result['nitro_info'][0]['migrationstatus'] == "Migration is completed"
      retries: 5
      delay: "{{migration_poll_delay}}"

      register: result

- hosts: primary
  remote_user: nsroot
  connection: citrix.adc.ssh_citrix_adc
  gather_facts: False
  vars:
    ansible_python_interpreter: /var/python/bin/python

    build_location: "/var/nsinstall/new_build/"
    build_file_name: "build-13.1-34.11_nc_64.tgz"
    nscli_command: "force ha failover -f"

  tasks:
    - name: Untar the build file in Old Primary node
      shell: "tar xvf {{ build_location }}{{ build_file_name }} -C {{ build_location }}"
      register: tar_output

    # - name: Untar result
    #   debug:
    #     msg: "{{ tar_output }}"

    - name: Upgrade build in Old Primary
      shell: "./installns -Y"
      args:
        chdir: "{{ build_location }}"
      register: nscli_output
      async: 120
      poll: 0

    - name: Wait for the Old Primary to Come-up
      wait_for_connection:
        connect_timeout: 10
        sleep: 10
        delay: 120
        timeout: 900

    - name: Force HA failover
      shell: "nscli -s -U :nsroot:{{nitro_pass}} {{ nscli_command }}"
