- hosts: secondary
  remote_user: nsroot
  connection: citrix.adc.ssh_citrix_adc
  gather_facts: false
  vars:
    ansible_python_interpreter: /var/python/bin/python

    build_location: "/var/nsinstall/new_build/"
    build_file_name: "build-13.1-34.11_nc_64.tgz"
    nscli_command: "force ha failover -force"

  tasks:
    - name: Untar the build file in Secondary node
      shell: "tar -xvzf {{ build_location }}{{ build_file_name }} -C {{ build_location }}"
      register: tar_output

    # - name: Untar result
    #   debug:
    #     msg: "{{ tar_output }}"

    - name: Upgrade build in Secondary node
      shell: "./installns -Y"
      args:
        chdir: "{{ build_location }}"
      async: 120
      poll: 0

    - name: Wait for the new Primary to Come-up
      wait_for_connection:
        connect_timeout: 10
        sleep: 10
        delay: 120
        timeout: 900

    - name: Force HA failover
      shell: "nscli -s -U :nsroot:{{nitro_pass}} {{ nscli_command }}"

- hosts: primary
  remote_user: nsroot
  connection: citrix.adc.ssh_citrix_adc
  gather_facts: False
  vars:
    ansible_python_interpreter: /var/python/bin/python

    build_location: "/var/nsinstall/new_build/"
    build_file_name: "build-13.1-34.11_nc_64.tgz"
    nscli_command: "force ha failover -f"

  tasks:
    - name: Untar the build file in Old Primary node
      shell: "tar -xvf {{ build_location }}{{ build_file_name }} -C {{ build_location }}"
      register: tar_output

    # - name: Untar result
    #   debug:
    #     msg: "{{ tar_output }}"

    - name: Upgrade build in Old Primary
      shell: "./installns -Y"
      args:
        chdir: "{{ build_location }}"
      async: 120
      poll: 0

    - name: Wait for the Old Primary to Come-up
      wait_for_connection:
        connect_timeout: 10
        sleep: 10
        delay: 120
        timeout: 900

    - name: Force HA failover
      shell: "nscli -s -U :nsroot:{{nitro_pass}} {{ nscli_command }}"
